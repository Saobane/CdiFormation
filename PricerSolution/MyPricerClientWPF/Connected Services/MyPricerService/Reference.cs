//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPricerClientWPF.MyPricerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondWcf", Namespace="http://schemas.datacontract.org/2004/07/MyPricerWCFLibrary")]
    [System.SerializableAttribute()]
    public partial class BondWcf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaturityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NominalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maturity {
            get {
                return this.MaturityField;
            }
            set {
                if ((this.MaturityField.Equals(value) != true)) {
                    this.MaturityField = value;
                    this.RaisePropertyChanged("Maturity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Nominal {
            get {
                return this.NominalField;
            }
            set {
                if ((this.NominalField.Equals(value) != true)) {
                    this.NominalField = value;
                    this.RaisePropertyChanged("Nominal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicity {
            get {
                return this.PeriodicityField;
            }
            set {
                if ((this.PeriodicityField.Equals(value) != true)) {
                    this.PeriodicityField = value;
                    this.RaisePropertyChanged("Periodicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyPricerService.IMyPricerService")]
    public interface IMyPricerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyPricerService/Compute", ReplyAction="http://tempuri.org/IMyPricerService/ComputeResponse")]
        double Compute(MyPricerClientWPF.MyPricerService.BondWcf bond, System.DateTime pricerDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyPricerService/Compute", ReplyAction="http://tempuri.org/IMyPricerService/ComputeResponse")]
        System.Threading.Tasks.Task<double> ComputeAsync(MyPricerClientWPF.MyPricerService.BondWcf bond, System.DateTime pricerDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyPricerService/ComputeToBondLastDate", ReplyAction="http://tempuri.org/IMyPricerService/ComputeToBondLastDateResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, double> ComputeToBondLastDate(MyPricerClientWPF.MyPricerService.BondWcf bond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyPricerService/ComputeToBondLastDate", ReplyAction="http://tempuri.org/IMyPricerService/ComputeToBondLastDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, double>> ComputeToBondLastDateAsync(MyPricerClientWPF.MyPricerService.BondWcf bond);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyPricerServiceChannel : MyPricerClientWPF.MyPricerService.IMyPricerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyPricerServiceClient : System.ServiceModel.ClientBase<MyPricerClientWPF.MyPricerService.IMyPricerService>, MyPricerClientWPF.MyPricerService.IMyPricerService {
        
        public MyPricerServiceClient() {
        }
        
        public MyPricerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyPricerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyPricerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyPricerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Compute(MyPricerClientWPF.MyPricerService.BondWcf bond, System.DateTime pricerDate) {
            return base.Channel.Compute(bond, pricerDate);
        }
        
        public System.Threading.Tasks.Task<double> ComputeAsync(MyPricerClientWPF.MyPricerService.BondWcf bond, System.DateTime pricerDate) {
            return base.Channel.ComputeAsync(bond, pricerDate);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, double> ComputeToBondLastDate(MyPricerClientWPF.MyPricerService.BondWcf bond) {
            return base.Channel.ComputeToBondLastDate(bond);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, double>> ComputeToBondLastDateAsync(MyPricerClientWPF.MyPricerService.BondWcf bond) {
            return base.Channel.ComputeToBondLastDateAsync(bond);
        }
    }
}
